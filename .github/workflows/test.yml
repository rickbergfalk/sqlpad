name: test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build for ${{ matrix.node-version }}
        run: scripts/build.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v1
        with:
          name: built_node${{ matrix.node-version }}
          path: server/public

  test:
    needs: build
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false # if one job fails, others will not be aborted
      matrix:
        backendtype: [ '', 'mssql','mysql', 'mariadb', 'postgres' ]
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install node modules
        run: npm ci --prefix server

      - name: Download built artifacts
        uses: actions/download-artifact@v1
        with:
          name: built_node${{ matrix.node-version }}
          path: server/public

      - name: Enable backend server
        if: ${{ matrix.backendtype }}
        run: |
          docker-compose -f server/docker-compose.yml up -d ${{ matrix.backendtype }}
          # Wait until container becomes healthy
          docker-compose -f server/docker-compose.yml events | grep --max-count 1 'health_status: healthy'

      - name: Test
        run: npm run test${{ matrix.backendtype }} --prefix server
